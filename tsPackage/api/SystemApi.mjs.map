{"version":3,"file":"SystemApi.mjs","sourceRoot":"","sources":["../../tsSourcesProject/api/SystemApi.mts"],"names":[],"mappings":"","sourcesContent":["// auto-generated file\nimport {IdWithRev} from '../model/IdWithRev.mjs';\nimport {IndexingInfo} from '../model/IndexingInfo.mjs';\nimport {ReplicationInfo} from '../model/ReplicationInfo.mjs';\nimport {ReplicatorDocument} from '../model/couchdb/ReplicatorDocument.mjs';\n\n\nexport interface SystemApi {\n\n\tgetVersion(): Promise<string>;\n\n\tisReady(): Promise<string>;\n\n\tgetProcessInfo(): Promise<string>;\n\n\tgetIndexingInfo(): Promise<IndexingInfo>;\n\n\tgetReplicationInfo(): Promise<ReplicationInfo>;\n\n\tupdateDesignDoc(entityName: string, options?: { warmup?: boolean | undefined }): Promise<boolean>;\n\n\tresolvePatientsConflicts(options?: { limit?: number | undefined }): Promise<Array<IdWithRev>>;\n\n\tresolveContactsConflicts(options?: { limit?: number | undefined }): Promise<Array<IdWithRev>>;\n\n\tresolveFormsConflicts(options?: { limit?: number | undefined }): Promise<Array<IdWithRev>>;\n\n\tresolveHealthElementsConflicts(options?: { limit?: number | undefined }): Promise<Array<IdWithRev>>;\n\n\tresolveInvoicesConflicts(options?: { limit?: number | undefined }): Promise<Array<IdWithRev>>;\n\n\tresolveMessagesConflicts(options?: { limit?: number | undefined }): Promise<Array<IdWithRev>>;\n\n\tresolveDocumentsConflicts(options?: { ids?: string | undefined, limit?: number | undefined }): Promise<Array<IdWithRev>>;\n\n\tgetIndexingInfoByGroup(groupId: string): Promise<IndexingInfo>;\n\n\tgetReplicatorInfo(id: string): Promise<ReplicatorDocument>;\n\n\tevictAllFromMap(mapName: string): Promise<string>;\n\n}\n"]}