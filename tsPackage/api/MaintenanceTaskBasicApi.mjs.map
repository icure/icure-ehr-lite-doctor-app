{"version":3,"file":"MaintenanceTaskBasicApi.mjs","sourceRoot":"","sources":["../../tsSourcesProject/api/MaintenanceTaskBasicApi.mts"],"names":[],"mappings":"","sourcesContent":["// auto-generated file\nimport {BaseFilterOptions, BaseSortableFilterOptions, PaginatedListIterator} from '../cardinal-sdk-ts.mjs';\nimport {IdWithMandatoryRev} from '../model/IdWithMandatoryRev.mjs';\nimport {EncryptedMaintenanceTask, MaintenanceTask} from '../model/MaintenanceTask.mjs';\nimport {DocIdentifier} from '../model/couchdb/DocIdentifier.mjs';\nimport {EntitySubscription} from '../subscription/EntitySubscription.mjs';\nimport {EntitySubscriptionConfiguration} from '../subscription/EntitySubscriptionConfiguration.mjs';\nimport {SubscriptionEventType} from '../subscription/SubscriptionEventType.mjs';\n\n\nexport interface MaintenanceTaskBasicApi {\n\n\tmatchMaintenanceTasksBy(filter: BaseFilterOptions<MaintenanceTask>): Promise<Array<string>>;\n\n\tmatchMaintenanceTasksBySorted(filter: BaseSortableFilterOptions<MaintenanceTask>): Promise<Array<string>>;\n\n\tfilterMaintenanceTasksBy(filter: BaseFilterOptions<MaintenanceTask>): Promise<PaginatedListIterator<EncryptedMaintenanceTask>>;\n\n\tfilterMaintenanceTasksBySorted(filter: BaseSortableFilterOptions<MaintenanceTask>): Promise<PaginatedListIterator<EncryptedMaintenanceTask>>;\n\n\tdeleteMaintenanceTaskUnsafe(entityId: string): Promise<DocIdentifier>;\n\n\tdeleteMaintenanceTasksUnsafe(entityIds: Array<string>): Promise<Array<DocIdentifier>>;\n\n\tdeleteMaintenanceTaskById(entityId: string, rev: string): Promise<DocIdentifier>;\n\n\tdeleteMaintenanceTasksByIds(entityIds: Array<IdWithMandatoryRev>): Promise<Array<DocIdentifier>>;\n\n\tpurgeMaintenanceTaskById(id: string, rev: string): Promise<void>;\n\n\tdeleteMaintenanceTask(maintenanceTask: MaintenanceTask): Promise<DocIdentifier>;\n\n\tdeleteMaintenanceTasks(maintenanceTasks: Array<MaintenanceTask>): Promise<Array<DocIdentifier>>;\n\n\tpurgeMaintenanceTask(maintenanceTask: MaintenanceTask): Promise<void>;\n\n\tundeleteMaintenanceTask(maintenanceTask: MaintenanceTask): Promise<MaintenanceTask>;\n\n\tundeleteMaintenanceTaskById(id: string, rev: string): Promise<EncryptedMaintenanceTask>;\n\n\tmodifyMaintenanceTask(entity: EncryptedMaintenanceTask): Promise<EncryptedMaintenanceTask>;\n\n\tgetMaintenanceTask(entityId: string): Promise<EncryptedMaintenanceTask>;\n\n\tgetMaintenanceTasks(entityIds: Array<string>): Promise<Array<EncryptedMaintenanceTask>>;\n\n\tsubscribeToEvents(events: Array<SubscriptionEventType>, filter: BaseFilterOptions<MaintenanceTask>,\n\t\t\toptions?: { subscriptionConfig?: EntitySubscriptionConfiguration | undefined }): Promise<EntitySubscription<EncryptedMaintenanceTask>>;\n\n}\n"]}