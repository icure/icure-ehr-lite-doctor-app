{"version":3,"file":"CalendarItemApi.mjs","sourceRoot":"","sources":["../../tsSourcesProject/api/CalendarItemApi.mts"],"names":[],"mappings":"","sourcesContent":["// auto-generated file\nimport {FilterOptions, PaginatedListIterator, SortableFilterOptions} from '../cardinal-sdk-ts.mjs';\nimport {CalendarItemShareOptions} from '../crypto/entities/CalendarItemShareOptions.mjs';\nimport {SecretIdUseOption} from '../crypto/entities/SecretIdUseOption.mjs';\nimport {CalendarItem, DecryptedCalendarItem, EncryptedCalendarItem} from '../model/CalendarItem.mjs';\nimport {IdWithMandatoryRev} from '../model/IdWithMandatoryRev.mjs';\nimport {PaginatedList} from '../model/PaginatedList.mjs';\nimport {Patient} from '../model/Patient.mjs';\nimport {User} from '../model/User.mjs';\nimport {DocIdentifier} from '../model/couchdb/DocIdentifier.mjs';\nimport {AccessLevel} from '../model/embed/AccessLevel.mjs';\nimport {HexString} from '../model/specializations/HexString.mjs';\nimport {EntitySubscription} from '../subscription/EntitySubscription.mjs';\nimport {EntitySubscriptionConfiguration} from '../subscription/EntitySubscriptionConfiguration.mjs';\nimport {SubscriptionEventType} from '../subscription/SubscriptionEventType.mjs';\nimport {CalendarItemFlavouredApi} from './CalendarItemFlavouredApi.mjs';\n\n\nexport interface CalendarItemApi {\n\n\tencrypted: CalendarItemFlavouredApi<EncryptedCalendarItem>;\n\n\ttryAndRecover: CalendarItemFlavouredApi<CalendarItem>;\n\n\tcreateCalendarItem(entity: DecryptedCalendarItem): Promise<DecryptedCalendarItem>;\n\n\twithEncryptionMetadata(base: DecryptedCalendarItem | undefined, patient: Patient,\n\t\t\toptions?: { user?: User | undefined, delegates?: { [ key: string ]: AccessLevel }, secretId?: SecretIdUseOption }): Promise<DecryptedCalendarItem>;\n\n\tgetEncryptionKeysOf(calendarItem: CalendarItem): Promise<Array<HexString>>;\n\n\thasWriteAccess(calendarItem: CalendarItem): Promise<boolean>;\n\n\tdecryptPatientIdOf(calendarItem: CalendarItem): Promise<Array<string>>;\n\n\tcreateDelegationDeAnonymizationMetadata(entity: CalendarItem,\n\t\t\tdelegates: Array<string>): Promise<void>;\n\n\tdecrypt(calendarItem: EncryptedCalendarItem): Promise<DecryptedCalendarItem>;\n\n\ttryDecrypt(calendarItem: EncryptedCalendarItem): Promise<CalendarItem>;\n\n\tmatchCalendarItemsBy(filter: FilterOptions<CalendarItem>): Promise<Array<string>>;\n\n\tmatchCalendarItemsBySorted(filter: SortableFilterOptions<CalendarItem>): Promise<Array<string>>;\n\n\tdeleteCalendarItemUnsafe(entityId: string): Promise<DocIdentifier>;\n\n\tdeleteCalendarItemsUnsafe(entityIds: Array<string>): Promise<Array<DocIdentifier>>;\n\n\tdeleteCalendarItemById(entityId: string, rev: string): Promise<DocIdentifier>;\n\n\tdeleteCalendarItemsByIds(entityIds: Array<IdWithMandatoryRev>): Promise<Array<DocIdentifier>>;\n\n\tpurgeCalendarItemById(id: string, rev: string): Promise<void>;\n\n\tdeleteCalendarItem(calendarItem: CalendarItem): Promise<DocIdentifier>;\n\n\tdeleteCalendarItems(calendarItems: Array<CalendarItem>): Promise<Array<DocIdentifier>>;\n\n\tpurgeCalendarItem(calendarItem: CalendarItem): Promise<void>;\n\n\tshareWith(delegateId: string, calendarItem: DecryptedCalendarItem,\n\t\t\toptions?: { options?: CalendarItemShareOptions | undefined }): Promise<DecryptedCalendarItem>;\n\n\tshareWithMany(calendarItem: DecryptedCalendarItem,\n\t\t\tdelegates: { [ key: string ]: CalendarItemShareOptions }): Promise<DecryptedCalendarItem>;\n\n\tfindCalendarItemsByHcPartyPatient(hcPartyId: string, patient: Patient,\n\t\t\toptions?: { startDate?: number | undefined, endDate?: number | undefined, descending?: boolean | undefined }): Promise<PaginatedListIterator<DecryptedCalendarItem>>;\n\n\tlinkToPatient(calendarItem: CalendarItem, patient: Patient,\n\t\t\tshareLinkWithDelegates: Array<string>): Promise<DecryptedCalendarItem>;\n\n\tfilterCalendarItemsBy(filter: FilterOptions<CalendarItem>): Promise<PaginatedListIterator<DecryptedCalendarItem>>;\n\n\tfilterCalendarItemsBySorted(filter: SortableFilterOptions<CalendarItem>): Promise<PaginatedListIterator<DecryptedCalendarItem>>;\n\n\tundeleteCalendarItemById(id: string, rev: string): Promise<DecryptedCalendarItem>;\n\n\tundeleteCalendarItem(calendarItem: CalendarItem): Promise<DecryptedCalendarItem>;\n\n\tmodifyCalendarItem(entity: DecryptedCalendarItem): Promise<DecryptedCalendarItem>;\n\n\tgetCalendarItem(entityId: string): Promise<DecryptedCalendarItem>;\n\n\tgetCalendarItems(entityIds: Array<string>): Promise<Array<DecryptedCalendarItem>>;\n\n\tgetCalendarItemsByPeriodAndHcPartyId(startDate: number, endDate: number,\n\t\t\thcPartyId: string): Promise<Array<DecryptedCalendarItem>>;\n\n\tgetCalendarsByPeriodAndAgendaId(startDate: number, endDate: number,\n\t\t\tagendaId: string): Promise<Array<DecryptedCalendarItem>>;\n\n\tfindCalendarItemsByRecurrenceId(recurrenceId: string, startKey: string | undefined,\n\t\t\tstartDocumentId: string | undefined,\n\t\t\tlimit: number): Promise<PaginatedList<DecryptedCalendarItem>>;\n\n\tsubscribeToEvents(events: Array<SubscriptionEventType>, filter: FilterOptions<CalendarItem>,\n\t\t\toptions?: { subscriptionConfig?: EntitySubscriptionConfiguration | undefined }): Promise<EntitySubscription<EncryptedCalendarItem>>;\n\n}\n"]}