{"version":3,"file":"TimeTableBasicApi.mjs","sourceRoot":"","sources":["../../tsSourcesProject/api/TimeTableBasicApi.mts"],"names":[],"mappings":"","sourcesContent":["// auto-generated file\nimport {BaseFilterOptions, BaseSortableFilterOptions, PaginatedListIterator} from '../cardinal-sdk-ts.mjs';\nimport {IdWithMandatoryRev} from '../model/IdWithMandatoryRev.mjs';\nimport {EncryptedTimeTable, TimeTable} from '../model/TimeTable.mjs';\nimport {DocIdentifier} from '../model/couchdb/DocIdentifier.mjs';\n\n\nexport interface TimeTableBasicApi {\n\n\tmatchTimeTablesBy(filter: BaseFilterOptions<TimeTable>): Promise<Array<string>>;\n\n\tmatchTimeTablesBySorted(filter: BaseSortableFilterOptions<TimeTable>): Promise<Array<string>>;\n\n\tfilterTimeTablesBy(filter: BaseFilterOptions<TimeTable>): Promise<PaginatedListIterator<EncryptedTimeTable>>;\n\n\tfilterTimeTablesBySorted(filter: BaseSortableFilterOptions<TimeTable>): Promise<PaginatedListIterator<EncryptedTimeTable>>;\n\n\tdeleteTimeTableUnsafe(entityId: string): Promise<DocIdentifier>;\n\n\tdeleteTimeTablesUnsafe(entityIds: Array<string>): Promise<Array<DocIdentifier>>;\n\n\tdeleteTimeTableById(entityId: string, rev: string): Promise<DocIdentifier>;\n\n\tdeleteTimeTablesByIds(entityIds: Array<IdWithMandatoryRev>): Promise<Array<DocIdentifier>>;\n\n\tpurgeTimeTableById(id: string, rev: string): Promise<void>;\n\n\tdeleteTimeTable(timeTable: TimeTable): Promise<DocIdentifier>;\n\n\tdeleteTimeTables(timeTables: Array<TimeTable>): Promise<Array<DocIdentifier>>;\n\n\tpurgeTimeTable(timeTable: TimeTable): Promise<void>;\n\n\tundeleteTimeTable(timeTable: TimeTable): Promise<TimeTable>;\n\n\tmodifyTimeTable(entity: EncryptedTimeTable): Promise<EncryptedTimeTable>;\n\n\tundeleteTimeTableById(id: string, rev: string): Promise<EncryptedTimeTable>;\n\n\tgetTimeTable(entityId: string): Promise<EncryptedTimeTable>;\n\n\tgetTimeTables(timeTableIds: Array<string>): Promise<Array<EncryptedTimeTable>>;\n\n\tgetTimeTablesByPeriodAndAgendaId(startDate: number, endDate: number,\n\t\t\tagendaId: string): Promise<Array<EncryptedTimeTable>>;\n\n\tgetTimeTablesByAgendaId(agendaId: string): Promise<Array<EncryptedTimeTable>>;\n\n}\n"]}