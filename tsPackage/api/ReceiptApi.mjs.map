{"version":3,"file":"ReceiptApi.mjs","sourceRoot":"","sources":["../../tsSourcesProject/api/ReceiptApi.mts"],"names":[],"mappings":"","sourcesContent":["// auto-generated file\nimport {ReceiptShareOptions} from '../crypto/entities/ReceiptShareOptions.mjs';\nimport {SecretIdUseOption} from '../crypto/entities/SecretIdUseOption.mjs';\nimport {Patient} from '../model/Patient.mjs';\nimport {DecryptedReceipt, EncryptedReceipt, Receipt} from '../model/Receipt.mjs';\nimport {User} from '../model/User.mjs';\nimport {DocIdentifier} from '../model/couchdb/DocIdentifier.mjs';\nimport {AccessLevel} from '../model/embed/AccessLevel.mjs';\nimport {HexString} from '../model/specializations/HexString.mjs';\nimport {ReceiptFlavouredApi} from './ReceiptFlavouredApi.mjs';\n\n\nexport interface ReceiptApi {\n\n\tencrypted: ReceiptFlavouredApi<EncryptedReceipt>;\n\n\ttryAndRecover: ReceiptFlavouredApi<Receipt>;\n\n\tcreateReceipt(entity: DecryptedReceipt): Promise<DecryptedReceipt>;\n\n\twithEncryptionMetadata(base: DecryptedReceipt | undefined, patient: Patient | undefined,\n\t\t\toptions?: { user?: User | undefined, delegates?: { [ key: string ]: AccessLevel }, secretId?: SecretIdUseOption }): Promise<DecryptedReceipt>;\n\n\tgetAndDecryptReceiptAttachment(receipt: Receipt, attachmentId: string): Promise<Int8Array>;\n\n\tencryptAndSetReceiptAttachment(receipt: Receipt, blobType: string,\n\t\t\tattachment: Int8Array): Promise<EncryptedReceipt>;\n\n\tgetEncryptionKeysOf(receipt: Receipt): Promise<Array<HexString>>;\n\n\thasWriteAccess(receipt: Receipt): Promise<boolean>;\n\n\tdecryptPatientIdOf(receipt: Receipt): Promise<Array<string>>;\n\n\tcreateDelegationDeAnonymizationMetadata(entity: Receipt, delegates: Array<string>): Promise<void>;\n\n\tlogReceipt(\n\t\t\tuser: User,\n\t\t\tdocId: string,\n\t\t\trefs: Array<string>,\n\t\t\tblobType: string,\n\t\t\tblob: Int8Array\n\t): Promise<Receipt>;\n\n\tdecrypt(receipt: EncryptedReceipt): Promise<DecryptedReceipt>;\n\n\ttryDecrypt(receipt: EncryptedReceipt): Promise<Receipt>;\n\n\tdeleteReceipt(entityId: string): Promise<DocIdentifier>;\n\n\tdeleteReceipts(entityIds: Array<string>): Promise<Array<DocIdentifier>>;\n\n\tgetRawReceiptAttachment(receiptId: string, attachmentId: string): Promise<Int8Array>;\n\n\tsetRawReceiptAttachment(receiptId: string, rev: string, blobType: string,\n\t\t\tattachment: Int8Array): Promise<EncryptedReceipt>;\n\n\tshareWith(delegateId: string, receipt: DecryptedReceipt,\n\t\t\toptions?: { options?: ReceiptShareOptions | undefined }): Promise<DecryptedReceipt>;\n\n\tshareWithMany(receipt: DecryptedReceipt,\n\t\t\tdelegates: { [ key: string ]: ReceiptShareOptions }): Promise<DecryptedReceipt>;\n\n\tmodifyReceipt(entity: DecryptedReceipt): Promise<DecryptedReceipt>;\n\n\tgetReceipt(entityId: string): Promise<DecryptedReceipt>;\n\n\tlistByReference(reference: string): Promise<Array<DecryptedReceipt>>;\n\n}\n"]}