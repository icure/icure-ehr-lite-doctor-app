{"version":3,"file":"InvoiceBasicApi.mjs","sourceRoot":"","sources":["../../tsSourcesProject/api/InvoiceBasicApi.mts"],"names":[],"mappings":"","sourcesContent":["// auto-generated file\nimport {EncryptedInvoice} from '../model/Invoice.mjs';\nimport {PaginatedList} from '../model/PaginatedList.mjs';\nimport {DocIdentifier} from '../model/couchdb/DocIdentifier.mjs';\nimport {LabelledOccurence} from '../model/data/LabelledOccurence.mjs';\nimport {InvoiceType} from '../model/embed/InvoiceType.mjs';\nimport {EncryptedInvoicingCode} from '../model/embed/InvoicingCode.mjs';\nimport {MediumType} from '../model/embed/MediumType.mjs';\n\n\nexport interface InvoiceBasicApi {\n\n\tdeleteInvoice(entityId: string): Promise<DocIdentifier>;\n\n\tgetTarificationsCodesOccurrences(minOccurrence: number): Promise<Array<LabelledOccurence>>;\n\n\tmodifyInvoice(entity: EncryptedInvoice): Promise<EncryptedInvoice>;\n\n\tmodifyInvoices(entities: Array<EncryptedInvoice>): Promise<Array<EncryptedInvoice>>;\n\n\tgetInvoice(entityId: string): Promise<EncryptedInvoice>;\n\n\tgetInvoices(entityIds: Array<string>): Promise<Array<EncryptedInvoice>>;\n\n\treassignInvoice(invoice: EncryptedInvoice): Promise<EncryptedInvoice>;\n\n\tmergeTo(invoiceId: string, ids: Array<string>): Promise<EncryptedInvoice>;\n\n\tvalidate(invoiceId: string, scheme: string, forcedValue: string): Promise<EncryptedInvoice>;\n\n\tappendCodes(\n\t\t\tuserId: string,\n\t\t\ttype: string,\n\t\t\tsentMediumType: string,\n\t\t\tsecretFKeys: string,\n\t\t\tinvoicingCodes: Array<EncryptedInvoicingCode>,\n\t\t\toptions?: { insuranceId?: string | undefined, invoiceId?: string | undefined, gracePeriod?: number | undefined }\n\t): Promise<Array<EncryptedInvoice>>;\n\n\tremoveCodes(userId: string, serviceId: string, secretFKeys: string,\n\t\t\ttarificationIds: Array<string>): Promise<Array<EncryptedInvoice>>;\n\n\tfindInvoicesByAuthor(hcPartyId: string,\n\t\t\toptions?: { fromDate?: number | undefined, toDate?: number | undefined, startKey?: any | undefined, startDocumentId?: string | undefined, limit?: number | undefined }): Promise<PaginatedList<EncryptedInvoice>>;\n\n\tlistInvoicesByHcPartyAndGroupId(hcPartyId: string,\n\t\t\tgroupId: string): Promise<Array<EncryptedInvoice>>;\n\n\tlistInvoicesByHcPartySentMediumTypeInvoiceTypeSentDate(\n\t\t\thcPartyId: string,\n\t\t\tsentMediumType: MediumType,\n\t\t\tinvoiceType: InvoiceType,\n\t\t\tsent: boolean,\n\t\t\toptions?: { from?: number | undefined, to?: number | undefined }\n\t): Promise<Array<EncryptedInvoice>>;\n\n\tlistInvoicesByContactIds(contactIds: Array<string>): Promise<Array<EncryptedInvoice>>;\n\n\tlistInvoicesByRecipientsIds(recipientsIds: Array<string>): Promise<Array<EncryptedInvoice>>;\n\n\tlistToInsurances(userIds: Array<string>): Promise<Array<EncryptedInvoice>>;\n\n\tlistToInsurancesUnsent(userIds: Array<string>): Promise<Array<EncryptedInvoice>>;\n\n\tlistToPatients(hcPartyId: string): Promise<Array<EncryptedInvoice>>;\n\n\tlistToPatientsUnsent(hcPartyId: string | undefined): Promise<Array<EncryptedInvoice>>;\n\n\tlistInvoicesByIds(ids: Array<string>): Promise<Array<EncryptedInvoice>>;\n\n\tlistInvoicesByHcpartySendingModeStatusDate(\n\t\t\thcPartyId: string,\n\t\t\tsendingMode: string,\n\t\t\tstatus: string,\n\t\t\tfrom: number,\n\t\t\tto: number\n\t): Promise<Array<EncryptedInvoice>>;\n\n\tlistInvoicesByServiceIds(serviceIds: Array<string>): Promise<Array<EncryptedInvoice>>;\n\n\tlistAllHcpsByStatus(status: string, hcpIds: Array<string>,\n\t\t\toptions?: { from?: number | undefined, to?: number | undefined }): Promise<Array<EncryptedInvoice>>;\n\n}\n"]}