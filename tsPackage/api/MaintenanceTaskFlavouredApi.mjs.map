{"version":3,"file":"MaintenanceTaskFlavouredApi.mjs","sourceRoot":"","sources":["../../tsSourcesProject/api/MaintenanceTaskFlavouredApi.mts"],"names":[],"mappings":"","sourcesContent":["// auto-generated file\nimport {FilterOptions, PaginatedListIterator, SortableFilterOptions} from '../cardinal-sdk-ts.mjs';\nimport {MaintenanceTaskShareOptions} from '../crypto/entities/MaintenanceTaskShareOptions.mjs';\nimport {MaintenanceTask} from '../model/MaintenanceTask.mjs';\n\n\nexport interface MaintenanceTaskFlavouredApi<E extends MaintenanceTask> {\n\n\tshareWith(delegateId: string, maintenanceTask: E,\n\t\t\toptions?: { options?: MaintenanceTaskShareOptions | undefined }): Promise<E>;\n\n\tshareWithMany(maintenanceTask: E,\n\t\t\tdelegates: { [ key: string ]: MaintenanceTaskShareOptions }): Promise<E>;\n\n\tfilterMaintenanceTasksBy(filter: FilterOptions<MaintenanceTask>): Promise<PaginatedListIterator<E>>;\n\n\tfilterMaintenanceTasksBySorted(filter: SortableFilterOptions<MaintenanceTask>): Promise<PaginatedListIterator<E>>;\n\n\tundeleteMaintenanceTask(maintenanceTask: MaintenanceTask): Promise<MaintenanceTask>;\n\n\tundeleteMaintenanceTaskById(id: string, rev: string): Promise<E>;\n\n\tmodifyMaintenanceTask(entity: E): Promise<E>;\n\n\tgetMaintenanceTask(entityId: string): Promise<E>;\n\n\tgetMaintenanceTasks(entityIds: Array<string>): Promise<Array<E>>;\n\n}\n"]}