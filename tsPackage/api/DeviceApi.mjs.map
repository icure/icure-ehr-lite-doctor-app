{"version":3,"file":"DeviceApi.mjs","sourceRoot":"","sources":["../../tsSourcesProject/api/DeviceApi.mts"],"names":[],"mappings":"","sourcesContent":["// auto-generated file\nimport {BaseFilterOptions, BaseSortableFilterOptions, FilterOptions, PaginatedListIterator} from '../cardinal-sdk-ts.mjs';\nimport {Device} from '../model/Device.mjs';\nimport {IdWithMandatoryRev} from '../model/IdWithMandatoryRev.mjs';\nimport {IdWithRev} from '../model/IdWithRev.mjs';\nimport {DocIdentifier} from '../model/couchdb/DocIdentifier.mjs';\nimport {EntitySubscription} from '../subscription/EntitySubscription.mjs';\nimport {EntitySubscriptionConfiguration} from '../subscription/EntitySubscriptionConfiguration.mjs';\nimport {SubscriptionEventType} from '../subscription/SubscriptionEventType.mjs';\n\n\nexport interface DeviceApi {\n\n\tdeleteDeviceUnsafe(entityId: string): Promise<DocIdentifier>;\n\n\tdeleteDevicesUnsafe(entityIds: Array<string>): Promise<Array<DocIdentifier>>;\n\n\tgetDevice(deviceId: string): Promise<Device>;\n\n\tgetDevices(deviceIds: Array<string>): Promise<Array<Device>>;\n\n\tcreateDevice(p: Device): Promise<Device>;\n\n\tmodifyDevice(device: Device): Promise<Device>;\n\n\tcreateDevices(devices: Array<Device>): Promise<Array<IdWithRev>>;\n\n\tmodifyDevices(devices: Array<Device>): Promise<Array<IdWithRev>>;\n\n\tfilterDevicesBy(filter: BaseFilterOptions<Device>): Promise<PaginatedListIterator<Device>>;\n\n\tfilterDevicesBySorted(filter: BaseSortableFilterOptions<Device>): Promise<PaginatedListIterator<Device>>;\n\n\tmatchDevicesBy(filter: BaseFilterOptions<Device>): Promise<Array<string>>;\n\n\tmatchDevicesBySorted(filter: BaseSortableFilterOptions<Device>): Promise<Array<string>>;\n\n\tdeleteDeviceById(entityId: string, rev: string): Promise<DocIdentifier>;\n\n\tdeleteDevicesByIds(entityIds: Array<IdWithMandatoryRev>): Promise<Array<DocIdentifier>>;\n\n\tpurgeDeviceById(id: string, rev: string): Promise<void>;\n\n\tundeleteDeviceById(id: string, rev: string): Promise<Device>;\n\n\tdeleteDevice(device: Device): Promise<DocIdentifier>;\n\n\tdeleteDevices(devices: Array<Device>): Promise<Array<DocIdentifier>>;\n\n\tpurgeDevice(device: Device): Promise<void>;\n\n\tundeleteDevice(device: Device): Promise<Device>;\n\n\tgetDevicesInGroup(groupId: string,\n\t\t\toptions?: { deviceIds?: Array<string> | undefined }): Promise<Array<Device>>;\n\n\tmodifyDeviceInGroup(groupId: string, device: Device): Promise<Device>;\n\n\tcreateDeviceInGroup(groupId: string, device: Device): Promise<Device>;\n\n\tdeleteDevicesInGroup(groupId: string, deviceIds: Array<IdWithRev>): Promise<Array<DocIdentifier>>;\n\n\tsubscribeToEvents(events: Array<SubscriptionEventType>, filter: FilterOptions<Device>,\n\t\t\toptions?: { subscriptionConfig?: EntitySubscriptionConfiguration | undefined }): Promise<EntitySubscription<Device>>;\n\n}\n"]}