{"version":3,"file":"MedicalLocationApi.mjs","sourceRoot":"","sources":["../../tsSourcesProject/api/MedicalLocationApi.mts"],"names":[],"mappings":"","sourcesContent":["// auto-generated file\nimport {BaseFilterOptions, BaseSortableFilterOptions, PaginatedListIterator} from '../cardinal-sdk-ts.mjs';\nimport {ListOfIds} from '../model/ListOfIds.mjs';\nimport {MedicalLocation} from '../model/MedicalLocation.mjs';\nimport {PaginatedList} from '../model/PaginatedList.mjs';\nimport {DocIdentifier} from '../model/couchdb/DocIdentifier.mjs';\n\n\nexport interface MedicalLocationApi {\n\n\tcreateMedicalLocation(medicalLocationDto: MedicalLocation): Promise<MedicalLocation>;\n\n\tdeleteMedicalLocations(locationIds: ListOfIds): Promise<Array<DocIdentifier>>;\n\n\tgetMedicalLocation(locationId: string): Promise<MedicalLocation>;\n\n\tgetAllMedicalLocations(startDocumentId: string | undefined,\n\t\t\tlimit: number | undefined): Promise<PaginatedList<MedicalLocation>>;\n\n\tmodifyMedicalLocation(medicalLocationDto: MedicalLocation): Promise<MedicalLocation>;\n\n\tgetMedicalLocations(medicalLocationIds: Array<string>): Promise<Array<MedicalLocation>>;\n\n\tmatchMedicalLocationsBy(filter: BaseFilterOptions<MedicalLocation>): Promise<Array<string>>;\n\n\tmatchMedicalLocationsBySorted(filter: BaseSortableFilterOptions<MedicalLocation>): Promise<Array<string>>;\n\n\tfilterMedicalLocationsBy(filter: BaseFilterOptions<MedicalLocation>): Promise<PaginatedListIterator<MedicalLocation>>;\n\n\tfilterMedicalLocationsBySorted(filter: BaseSortableFilterOptions<MedicalLocation>): Promise<PaginatedListIterator<MedicalLocation>>;\n\n}\n"]}