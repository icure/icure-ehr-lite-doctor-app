{"version":3,"file":"ClassificationBasicApi.mjs","sourceRoot":"","sources":["../../tsSourcesProject/api/ClassificationBasicApi.mts"],"names":[],"mappings":"","sourcesContent":["// auto-generated file\nimport {BaseFilterOptions, BaseSortableFilterOptions, PaginatedListIterator} from '../cardinal-sdk-ts.mjs';\nimport {Classification, EncryptedClassification} from '../model/Classification.mjs';\nimport {DocIdentifier} from '../model/couchdb/DocIdentifier.mjs';\n\n\nexport interface ClassificationBasicApi {\n\n\tmatchClassificationsBy(filter: BaseFilterOptions<Classification>): Promise<Array<string>>;\n\n\tmatchClassificationsBySorted(filter: BaseSortableFilterOptions<Classification>): Promise<Array<string>>;\n\n\tfilterClassificationsBy(filter: BaseFilterOptions<Classification>): Promise<PaginatedListIterator<EncryptedClassification>>;\n\n\tfilterClassificationsBySorted(filter: BaseSortableFilterOptions<Classification>): Promise<PaginatedListIterator<EncryptedClassification>>;\n\n\tdeleteClassification(entityId: string): Promise<DocIdentifier>;\n\n\tdeleteClassifications(entityIds: Array<string>): Promise<Array<DocIdentifier>>;\n\n\tmodifyClassification(entity: EncryptedClassification): Promise<EncryptedClassification>;\n\n\tgetClassification(entityId: string): Promise<EncryptedClassification>;\n\n\tgetClassifications(entityIds: Array<string>): Promise<Array<EncryptedClassification>>;\n\n}\n"]}