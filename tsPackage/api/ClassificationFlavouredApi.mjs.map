{"version":3,"file":"ClassificationFlavouredApi.mjs","sourceRoot":"","sources":["../../tsSourcesProject/api/ClassificationFlavouredApi.mts"],"names":[],"mappings":"","sourcesContent":["// auto-generated file\nimport {FilterOptions, PaginatedListIterator, SortableFilterOptions} from '../cardinal-sdk-ts.mjs';\nimport {ClassificationShareOptions} from '../crypto/entities/ClassificationShareOptions.mjs';\nimport {Classification} from '../model/Classification.mjs';\nimport {Patient} from '../model/Patient.mjs';\n\n\nexport interface ClassificationFlavouredApi<E extends Classification> {\n\n\tshareWith(delegateId: string, classification: E,\n\t\t\toptions?: { options?: ClassificationShareOptions | undefined }): Promise<E>;\n\n\tshareWithMany(classification: E,\n\t\t\tdelegates: { [ key: string ]: ClassificationShareOptions }): Promise<E>;\n\n\tfindClassificationsByHcPartyPatient(hcPartyId: string, patient: Patient,\n\t\t\toptions?: { startDate?: number | undefined, endDate?: number | undefined, descending?: boolean | undefined }): Promise<PaginatedListIterator<E>>;\n\n\tfilterClassificationsBy(filter: FilterOptions<Classification>): Promise<PaginatedListIterator<E>>;\n\n\tfilterClassificationsBySorted(filter: SortableFilterOptions<Classification>): Promise<PaginatedListIterator<E>>;\n\n\tmodifyClassification(entity: E): Promise<E>;\n\n\tgetClassification(entityId: string): Promise<E>;\n\n\tgetClassifications(entityIds: Array<string>): Promise<Array<E>>;\n\n}\n"]}