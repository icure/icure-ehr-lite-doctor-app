{"version":3,"file":"CodeFilters.mjs","sourceRoot":"","sources":["../../tsSourcesProject/filters/CodeFilters.mts"],"names":[],"mappings":"AAAA,sBAAsB;AACtB,OAAO,EAA+C,sBAAsB,EAAC,MAAM,wBAAwB,CAAC;AAwB5G,MAAM,CAAC,MAAM,WAAW,GAAuB;IAC5C,GAAG,EAAE,GAAG,EAAE,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE;IACrD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;IAC/D,eAAe,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC,eAAe,CAAC,QAAQ,EAAE,OAAO,CAAC;IAC/G,uBAAuB,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC,uBAAuB,CAAC,MAAM,EAAE,OAAO,CAAC;IAC3H,yBAAyB,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC,yBAAyB,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC;IAC/I,iCAAiC,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC,iCAAiC,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC;CAC/K,CAAC","sourcesContent":["// auto-generated file\nimport {BaseFilterOptions, BaseSortableFilterOptions, InternalCodeFiltersObj} from '../cardinal-sdk-ts.mjs';\nimport {Code} from '../model/Code.mjs';\n\n\ninterface CodeFiltersFactory {\n\n\tall(): BaseFilterOptions<Code>;\n\n\tbyIds(ids: Array<string>): BaseSortableFilterOptions<Code>;\n\n\tbyQualifiedLink(linkType: string,\n\t\t\toptions?: { linkedId?: string | undefined }): BaseFilterOptions<Code>;\n\n\tbyRegionTypeCodeVersion(region: string,\n\t\t\toptions?: { type?: string | undefined, code?: string | undefined, version?: string | undefined }): BaseFilterOptions<Code>;\n\n\tbyLanguageTypeLabelRegion(language: string, type: string,\n\t\t\toptions?: { label?: string | undefined, region?: string | undefined }): BaseFilterOptions<Code>;\n\n\tbyLanguageTypesLabelRegionVersion(language: string, types: Array<string>, label: string,\n\t\t\toptions?: { region?: string | undefined, version?: string | undefined }): BaseFilterOptions<Code>;\n\n}\n\nexport const CodeFilters: CodeFiltersFactory = {\n\t\t\tall: () => InternalCodeFiltersObj.getInstance().all(),\n\t\t\tbyIds: (ids) => InternalCodeFiltersObj.getInstance().byIds(ids),\n\t\t\tbyQualifiedLink: (linkType, options) => InternalCodeFiltersObj.getInstance().byQualifiedLink(linkType, options),\n\t\t\tbyRegionTypeCodeVersion: (region, options) => InternalCodeFiltersObj.getInstance().byRegionTypeCodeVersion(region, options),\n\t\t\tbyLanguageTypeLabelRegion: (language, type, options) => InternalCodeFiltersObj.getInstance().byLanguageTypeLabelRegion(language, type, options),\n\t\t\tbyLanguageTypesLabelRegionVersion: (language, types, label, options) => InternalCodeFiltersObj.getInstance().byLanguageTypesLabelRegionVersion(language, types, label, options)\n\t\t};\n"]}