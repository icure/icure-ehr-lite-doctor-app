{"version":3,"file":"AccessLogFilters.mjs","sourceRoot":"","sources":["../../tsSourcesProject/filters/AccessLogFilters.mts"],"names":[],"mappings":"AAAA,sBAAsB;AACtB,OAAO,EAA4B,2BAA2B,EAAwB,MAAM,wBAAwB,CAAC;AA0BrH,MAAM,CAAC,MAAM,gBAAgB,GAA4B;IACtD,0BAA0B,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC,0BAA0B,CAAC,WAAW,EAAE,QAAQ,EAAE,OAAO,CAAC;IACpK,qBAAqB,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC,qBAAqB,CAAC,QAAQ,EAAE,OAAO,CAAC;IAChI,kCAAkC,EAAE,CAAC,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC,kCAAkC,CAAC,WAAW,EAAE,SAAS,EAAE,OAAO,CAAC;IACtL,6BAA6B,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,EAAE,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC,6BAA6B,CAAC,SAAS,EAAE,OAAO,CAAC;IAClJ,MAAM,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;IAC9E,cAAc,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,CAAC;CAC9G,CAAC","sourcesContent":["// auto-generated file\nimport {BaseSortableFilterOptions, InternalAccessLogFiltersObj, SortableFilterOptions} from '../cardinal-sdk-ts.mjs';\nimport {AccessLog} from '../model/AccessLog.mjs';\nimport {Patient} from '../model/Patient.mjs';\n\n\ninterface AccessLogFiltersFactory {\n\n\tbyPatientsDateForDataOwner(dataOwnerId: string, patients: Array<Patient>,\n\t\t\toptions?: { from?: number | undefined, to?: number | undefined, descending?: boolean }): SortableFilterOptions<AccessLog>;\n\n\tbyPatientsDateForSelf(patients: Array<Patient>,\n\t\t\toptions?: { from?: number | undefined, to?: number | undefined, descending?: boolean }): SortableFilterOptions<AccessLog>;\n\n\tbyPatientSecretIdsDateForDataOwner(dataOwnerId: string, secretIds: Array<string>,\n\t\t\toptions?: { from?: number | undefined, to?: number | undefined, descending?: boolean }): BaseSortableFilterOptions<AccessLog>;\n\n\tbyPatientSecretIdsDateForSelf(secretIds: Array<string>,\n\t\t\toptions?: { from?: number | undefined, to?: number | undefined, descending?: boolean }): SortableFilterOptions<AccessLog>;\n\n\tbyDate(options?: { from?: number | undefined, to?: number | undefined, descending?: boolean }): BaseSortableFilterOptions<AccessLog>;\n\n\tbyUserTypeDate(userId: string,\n\t\t\toptions?: { accessType?: string | undefined, from?: number | undefined, descending?: boolean }): BaseSortableFilterOptions<AccessLog>;\n\n}\n\nexport const AccessLogFilters: AccessLogFiltersFactory = {\n\t\t\tbyPatientsDateForDataOwner: (dataOwnerId, patients, options) => InternalAccessLogFiltersObj.getInstance().byPatientsDateForDataOwner(dataOwnerId, patients, options),\n\t\t\tbyPatientsDateForSelf: (patients, options) => InternalAccessLogFiltersObj.getInstance().byPatientsDateForSelf(patients, options),\n\t\t\tbyPatientSecretIdsDateForDataOwner: (dataOwnerId, secretIds, options) => InternalAccessLogFiltersObj.getInstance().byPatientSecretIdsDateForDataOwner(dataOwnerId, secretIds, options),\n\t\t\tbyPatientSecretIdsDateForSelf: (secretIds, options) => InternalAccessLogFiltersObj.getInstance().byPatientSecretIdsDateForSelf(secretIds, options),\n\t\t\tbyDate: (options) => InternalAccessLogFiltersObj.getInstance().byDate(options),\n\t\t\tbyUserTypeDate: (userId, options) => InternalAccessLogFiltersObj.getInstance().byUserTypeDate(userId, options)\n\t\t};\n"]}