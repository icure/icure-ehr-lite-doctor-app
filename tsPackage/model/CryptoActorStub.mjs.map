{"version":3,"file":"CryptoActorStub.mjs","sourceRoot":"","sources":["../../tsSourcesProject/model/CryptoActorStub.mts"],"names":[],"mappings":"AAAA,sBAAsB;AACtB,OAAO,EAAC,UAAU,EAAC,MAAM,iBAAiB,CAAC;AAS3C,MAAM,OAAO,eAAe;IAwB3B,YAAY,OAAgG;;QAlB5G,gBAAW,GAA0C,EAAE,CAAC;QAExD,oBAAe,GAA6E,EAAE,CAAC;QAE/F,iBAAY,GAAwD,EAAE,CAAC;QAEvE,+BAA0B,GAAmC,EAAE,CAAC;QAEhE,cAAS,GAA8B,SAAS,CAAC;QAIjD,SAAI,GAAoB,EAAE,CAAC;QAE3B,aAAQ,GAAuB,SAAS,CAAC;QAEhC,aAAQ,GAAmD,8CAA8C,CAAC;QAGlH,IAAI,CAAC,EAAE,GAAG,MAAA,OAAO,CAAC,EAAE,mCAAI,UAAU,EAAE,CAAC;QACrC,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;QACvB,IAAI,aAAa,IAAI,OAAO,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS;YAAE,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;QAC1G,IAAI,iBAAiB,IAAI,OAAO,IAAI,OAAO,CAAC,eAAe,KAAK,SAAS;YAAE,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC;QAC1H,IAAI,cAAc,IAAI,OAAO,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS;YAAE,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;QAC9G,IAAI,4BAA4B,IAAI,OAAO,IAAI,OAAO,CAAC,0BAA0B,KAAK,SAAS;YAAE,IAAI,CAAC,0BAA0B,GAAG,OAAO,CAAC,0BAA0B,CAAC;QACtK,IAAI,WAAW,IAAI,OAAO;YAAE,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QAC/D,IAAI,CAAC,2BAA2B,GAAG,OAAO,CAAC,2BAA2B,CAAC;QACvE,IAAI,MAAM,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS;YAAE,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAC9E,IAAI,UAAU,IAAI,OAAO;YAAE,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;IAC7D,CAAC;CAED","sourcesContent":["// auto-generated file\nimport {randomUuid} from '../utils/Id.mjs';\nimport {CodeStub} from './base/CodeStub.mjs';\nimport {CryptoActor} from './base/CryptoActor.mjs';\nimport {HasTags} from './base/HasTags.mjs';\nimport {Versionable} from './base/Versionable.mjs';\nimport {HexString} from './specializations/HexString.mjs';\nimport {SpkiHexString} from './specializations/SpkiHexString.mjs';\n\n\nexport class CryptoActorStub implements Versionable<string>, CryptoActor, HasTags {\n\n\tid: string;\n\n\trev: string;\n\n\thcPartyKeys: { [ key: string ]: Array<HexString> } = {};\n\n\taesExchangeKeys: { [ key: string ]: { [ key: string ]: { [ key: string ]: HexString } } } = {};\n\n\ttransferKeys: { [ key: string ]: { [ key: string ]: HexString } } = {};\n\n\tprivateKeyShamirPartitions: { [ key: string ]: HexString } = {};\n\n\tpublicKey: SpkiHexString | undefined = undefined;\n\n\tpublicKeysForOaepWithSha256: Array<SpkiHexString>;\n\n\ttags: Array<CodeStub> = [];\n\n\tparentId: string | undefined = undefined;\n\n\treadonly $ktClass: 'com.icure.cardinal.sdk.model.CryptoActorStub' = 'com.icure.cardinal.sdk.model.CryptoActorStub';\n\n\tconstructor(partial: Partial<CryptoActorStub> & Pick<CryptoActorStub, \"rev\" | \"publicKeysForOaepWithSha256\">) {\n\t\tthis.id = partial.id ?? randomUuid();\n\t\tthis.rev = partial.rev;\n\t\tif ('hcPartyKeys' in partial && partial.hcPartyKeys !== undefined) this.hcPartyKeys = partial.hcPartyKeys;\n\t\tif ('aesExchangeKeys' in partial && partial.aesExchangeKeys !== undefined) this.aesExchangeKeys = partial.aesExchangeKeys;\n\t\tif ('transferKeys' in partial && partial.transferKeys !== undefined) this.transferKeys = partial.transferKeys;\n\t\tif ('privateKeyShamirPartitions' in partial && partial.privateKeyShamirPartitions !== undefined) this.privateKeyShamirPartitions = partial.privateKeyShamirPartitions;\n\t\tif ('publicKey' in partial) this.publicKey = partial.publicKey;\n\t\tthis.publicKeysForOaepWithSha256 = partial.publicKeysForOaepWithSha256;\n\t\tif ('tags' in partial && partial.tags !== undefined) this.tags = partial.tags;\n\t\tif ('parentId' in partial) this.parentId = partial.parentId;\n\t}\n\n}\n"]}